name: Nix CI

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        default: .
        type: string
    secrets:
      CACHIX_AUTH_TOKEN:
        required: true

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v24
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"
        working-directory: ${{ inputs.working-directory }}

  nix-build-or-run:
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v24
      - uses: cachix/cachix-action@v13
        with:
          name: fanshi1028-personal
          extraPullNames: nix-community
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: nix-run
        if: ${{ !contains(matrix.attr, 'shell') }}
        run: |
          nix run -L --accept-flake-config ".#${{ matrix.attr }}"
        working-directory: ${{ inputs.working-directory }}
      - name: nix-build
        if: ${{ contains(matrix.attr, 'shell') && !contains(matrix.attr, 'linux') }}
        run: |
          nix build -L --accept-flake-config ".#${{ matrix.attr }}"
        working-directory: ${{ inputs.working-directory }}

      - name: Upload Data Visualizations
        if: ${{!contains(matrix.attr, 'shell') && contains(matrix.attr, 'linux')}}
        uses: actions/upload-artifact@v4
        with:
          name: data-visualizations
          path: ${{ inputs.working-directory }}/*.svg
